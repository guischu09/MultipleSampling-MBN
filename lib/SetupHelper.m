
function [ setup, button]  = SetupHelper()

[ setup, button] = settingsdlg(...
    'separator', 'MS-scheme parameters:', ...
    'alpha', 0.05, ...
    'theta', 1-0.05, ...
    'thresh', 0.3, ...
    'weights', {'Pearson','Spearman','Kendall'}, ...
    'correction_type', {'FDR', 'Bonferroni'},...
    'SamplingType', {'Bootstrap','Subsampling'}, ...
    'Nsamples', 2000, ...
    'criteria_representation', {'mean','median','mode','Geodesic'}, ...
    'data_balance', {'NotBalanced','ADASYN','BalanceDown'}, ...
    {'SampleMeasures'; 'SampleMeasures'}, [true,false], ...
    'NsamplesMeasures', 30, ...
    'separator', '3D brain plot options:', ...
    {'Plot3D','Plot3D'},[false,true], ...
    'Interactive3D', false, ...
    'brain_type', {'human', 'rat/mice'}, ...
    'separator','Network plot options', ...
    'WhichPlot', {'Heat&Circle','Heatmap'},...
    'output_format', {'jpg','png','svg','pdf'}, ...
    'plotMatrix', {'MS_Scheme', 'Conventional'},...
    {'Value for doing multiple comparison. Only nodes with pvalue < alpha will be kept', ...
    'Sets threshold value of the Pmap method', ...
    'Sets minimum acceptable weigth values',...
    'Define weigth of edges', ...
    'Set multiple comparison method', ...
    'Define what sampling scheme will be used', ....
    'Define number of MBNs that will be assembled', ...
    'Define group representative MBN criterion', ...
    'Define imbalance correction type',...
    'Check this if you want to compute graph measures using less samples than specified in Nsamples',...
    'Define the number of samples to compute graph measures',...
    'Check this if would like generate a 3D brain MBN',...
    'Check this if would like to interact with the 3D brain MBN', ...
    'Sets the initial view of the 3D brain plot. This parameter was chosen empirically to look reasonably good for each input.', ...
    'Define if you want to outuput circle plot as well', ...
    'Define output format of plots', ...
    'Define MBN method construction'});



setup.nbins = 100; % Fixed value.
setup.ptresh = setup.theta;
setup.Nsamplings_vector = setup.Nsamples;
setup.balanced = setup.data_balance;
setup.randomType = setup.SamplingType;

if strcmp(setup.randomType,'Subsampling')
    setup.max_remov = 0.3;
    setup.min_remov = 0.1;
end

setup.OUTPUT_FOMAT_VEC = {setup.output_format};

switch setup.weights
    
    case 'Pearson'
        setup.weights = 'PearsonCorrelation';
        
    case 'Spearman'
        setup.weights = 'SpearmanCorrelation';
        
    case 'Kendall'
        setup.weights = 'KendallCorrelation';
end

setup.interactive = setup.Interactive3D;

if strcmp(setup.brain_type,'rat/mice')
    setup.brain_type = 'rat';
end

if setup.NsamplesMeasures > setup.Nsamples
    setup.NsamplesMeasures = setup.Nsamples;
end


end

